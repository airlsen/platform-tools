{"version":3,"sources":["webpack:///static/js/35.854f995e8b0ecb8954dd.js","webpack:///./src/views/components/Form.vue","webpack:///Form.vue","webpack:///./src/views/components/Form.vue?88ca"],"names":["webpackJsonp","590","module","exports","__webpack_require__","Component","options","__file","esModule","Object","keys","some","key","substr","console","error","functional","669","__webpack_exports__","defineProperty","value","data","formItem","input","select","radio","checkbox","switch","date","time","slider","textarea","formInline","user","password","ruleInline","required","message","trigger","type","min","formLeft","input1","input2","input3","formRight","formTop","formValidate","name","mail","city","gender","interest","desc","ruleValidate","max","formDynamic","items","methods","handleSubmit","_this","this","$refs","validate","valid","$Message","success","handleReset","resetFields","handleAdd","push","handleRemove","index","splice","739","render","_vm","_h","$createElement","_c","_self","attrs","span","staticClass","ref","model","rules","inline","prop","placeholder","callback","$$v","expression","slot","_v","on","click","$event","label-width","label","size","range","autosize","minRows","maxRows","staticStyle","margin-left","label-position","text-align","_l","item","long","icon","staticRenderFns","_withStripped"],"mappings":"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","file":"static/js/35.854f995e8b0ecb8954dd.js","sourcesContent":["webpackJsonp([35],{\n\n/***/ 590:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar disposed = false\nvar Component = __webpack_require__(9)(\n  /* script */\n  __webpack_require__(669),\n  /* template */\n  __webpack_require__(739),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\nComponent.options.__file = \"D:\\\\workspace-python\\\\platform-tools\\\\platform_vue\\\\src\\\\views\\\\components\\\\Form.vue\"\nif (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== \"default\" && key.substr(0, 2) !== \"__\"})) {console.error(\"named exports are not supported in *.vue files.\")}\nif (Component.options.functional) {console.error(\"[vue-loader] Form.vue: functional components are not supported with templates, they should use render functions.\")}\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-loader/node_modules/vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-6c0ec0ac\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-6c0ec0ac\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 669:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    data: function data() {\n        return {\n            formItem: {\n                input: '',\n                select: '',\n                radio: 'male',\n                checkbox: [],\n                switch: true,\n                date: '',\n                time: '',\n                slider: [20, 50],\n                textarea: ''\n            },\n            formInline: {\n                user: '',\n                password: ''\n            },\n            ruleInline: {\n                user: [{ required: true, message: '请填写用户名', trigger: 'blur' }],\n                password: [{ required: true, message: '请填写密码', trigger: 'blur' }, { type: 'string', min: 6, message: '密码长度不能小于6位', trigger: 'blur' }]\n            },\n            formLeft: {\n                input1: '',\n                input2: '',\n                input3: ''\n            },\n            formRight: {\n                input1: '',\n                input2: '',\n                input3: ''\n            },\n            formTop: {\n                input1: '',\n                input2: '',\n                input3: ''\n            },\n            formValidate: {\n                name: '',\n                mail: '',\n                city: '',\n                gender: '',\n                interest: [],\n                date: '',\n                time: '',\n                desc: ''\n            },\n            ruleValidate: {\n                name: [{ required: true, message: '姓名不能为空', trigger: 'blur' }],\n                mail: [{ required: true, message: '邮箱不能为空', trigger: 'blur' }, { type: 'email', message: '邮箱格式不正确', trigger: 'blur' }],\n                city: [{ required: true, message: '请选择城市', trigger: 'change' }],\n                gender: [{ required: true, message: '请选择性别', trigger: 'change' }],\n                interest: [{ required: true, type: 'array', min: 1, message: '至少选择一个爱好', trigger: 'change' }, { type: 'array', max: 2, message: '最多选择两个爱好', trigger: 'change' }],\n                date: [{ required: true, type: 'date', message: '请选择日期', trigger: 'change' }],\n                time: [{ required: true, type: 'date', message: '请选择时间', trigger: 'change' }],\n                desc: [{ required: true, message: '请输入个人介绍', trigger: 'blur' }, { type: 'string', min: 20, message: '介绍不能少于20字', trigger: 'blur' }]\n            },\n            formDynamic: {\n                items: [{\n                    value: ''\n                }]\n            }\n        };\n    },\n\n    methods: {\n        handleSubmit: function handleSubmit(name) {\n            var _this = this;\n\n            this.$refs[name].validate(function (valid) {\n                if (valid) {\n                    _this.$Message.success('提交成功!');\n                } else {\n                    _this.$Message.error('表单验证失败!');\n                }\n            });\n        },\n        handleReset: function handleReset(name) {\n            this.$refs[name].resetFields();\n        },\n        handleAdd: function handleAdd() {\n            this.formDynamic.items.push({\n                value: ''\n            });\n        },\n        handleRemove: function handleRemove(index) {\n            this.formDynamic.items.splice(index, 1);\n        }\n    }\n\n});\n\n/***/ }),\n\n/***/ 739:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('Row', [_c('Col', {\n    attrs: {\n      \"span\": \"24\"\n    }\n  }, [_c('div', {\n    staticClass: \"doc-header\"\n  }, [_c('Form', {\n    ref: \"formInline\",\n    attrs: {\n      \"model\": _vm.formInline,\n      \"rules\": _vm.ruleInline,\n      \"inline\": \"\"\n    }\n  }, [_c('Form-item', {\n    attrs: {\n      \"prop\": \"user\"\n    }\n  }, [_c('Input', {\n    attrs: {\n      \"type\": \"text\",\n      \"placeholder\": \"Username\"\n    },\n    model: {\n      value: (_vm.formInline.user),\n      callback: function($$v) {\n        _vm.formInline.user = $$v\n      },\n      expression: \"formInline.user\"\n    }\n  }, [_c('Icon', {\n    attrs: {\n      \"type\": \"ios-person-outline\"\n    },\n    slot: \"prepend\"\n  })], 1)], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"prop\": \"password\"\n    }\n  }, [_c('Input', {\n    attrs: {\n      \"type\": \"password\",\n      \"placeholder\": \"Password\"\n    },\n    model: {\n      value: (_vm.formInline.password),\n      callback: function($$v) {\n        _vm.formInline.password = $$v\n      },\n      expression: \"formInline.password\"\n    }\n  }, [_c('Icon', {\n    attrs: {\n      \"type\": \"ios-locked-outline\"\n    },\n    slot: \"prepend\"\n  })], 1)], 1), _vm._v(\" \"), _c('Form-item', [_c('Button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.handleSubmit('formInline')\n      }\n    }\n  }, [_vm._v(\"登录\")])], 1)], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"doc-content\"\n  }, [_c('h5', [_vm._v(\"行内表单\")]), _vm._v(\" \"), _c('p', [_vm._v(\"设置属性 inline，表单元素可以水平排列。\")])])])], 1), _vm._v(\" \"), _c('Row', [_c('Col', {\n    attrs: {\n      \"span\": \"24\"\n    }\n  }, [_c('div', {\n    staticClass: \"doc-header\"\n  }, [_c('Form', {\n    attrs: {\n      \"model\": _vm.formItem,\n      \"label-width\": 80\n    }\n  }, [_c('Form-item', {\n    attrs: {\n      \"label\": \"输入框\"\n    }\n  }, [_c('Input', {\n    attrs: {\n      \"placeholder\": \"请输入\"\n    },\n    model: {\n      value: (_vm.formItem.input),\n      callback: function($$v) {\n        _vm.formItem.input = $$v\n      },\n      expression: \"formItem.input\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"选择器\"\n    }\n  }, [_c('Select', {\n    attrs: {\n      \"placeholder\": \"请选择\"\n    },\n    model: {\n      value: (_vm.formItem.select),\n      callback: function($$v) {\n        _vm.formItem.select = $$v\n      },\n      expression: \"formItem.select\"\n    }\n  }, [_c('Option', {\n    attrs: {\n      \"value\": \"beijing\"\n    }\n  }, [_vm._v(\"北京市\")]), _vm._v(\" \"), _c('Option', {\n    attrs: {\n      \"value\": \"shanghai\"\n    }\n  }, [_vm._v(\"上海市\")]), _vm._v(\" \"), _c('Option', {\n    attrs: {\n      \"value\": \"shenzhen\"\n    }\n  }, [_vm._v(\"深圳市\")])], 1)], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"日期控件\"\n    }\n  }, [_c('Date-picker', {\n    attrs: {\n      \"type\": \"date\",\n      \"placeholder\": \"选择日期\"\n    },\n    model: {\n      value: (_vm.formItem.date),\n      callback: function($$v) {\n        _vm.formItem.date = $$v\n      },\n      expression: \"formItem.date\"\n    }\n  }), _vm._v(\" \"), _c('Time-picker', {\n    attrs: {\n      \"type\": \"time\",\n      \"placeholder\": \"选择时间\"\n    },\n    model: {\n      value: (_vm.formItem.time),\n      callback: function($$v) {\n        _vm.formItem.time = $$v\n      },\n      expression: \"formItem.time\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"单选框\"\n    }\n  }, [_c('Radio-group', {\n    model: {\n      value: (_vm.formItem.radio),\n      callback: function($$v) {\n        _vm.formItem.radio = $$v\n      },\n      expression: \"formItem.radio\"\n    }\n  }, [_c('Radio', {\n    attrs: {\n      \"label\": \"male\"\n    }\n  }, [_vm._v(\"男\")]), _vm._v(\" \"), _c('Radio', {\n    attrs: {\n      \"label\": \"female\"\n    }\n  }, [_vm._v(\"女\")])], 1)], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"多选框\"\n    }\n  }, [_c('Checkbox-group', {\n    model: {\n      value: (_vm.formItem.checkbox),\n      callback: function($$v) {\n        _vm.formItem.checkbox = $$v\n      },\n      expression: \"formItem.checkbox\"\n    }\n  }, [_c('Checkbox', {\n    attrs: {\n      \"label\": \"吃饭\"\n    }\n  }), _vm._v(\" \"), _c('Checkbox', {\n    attrs: {\n      \"label\": \"睡觉\"\n    }\n  }), _vm._v(\" \"), _c('Checkbox', {\n    attrs: {\n      \"label\": \"跑步\"\n    }\n  }), _vm._v(\" \"), _c('Checkbox', {\n    attrs: {\n      \"label\": \"看电影\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"开关\"\n    }\n  }, [_c('iSwitch', {\n    attrs: {\n      \"size\": \"large\"\n    },\n    model: {\n      value: (_vm.formItem.switch),\n      callback: function($$v) {\n        _vm.formItem.switch = $$v\n      },\n      expression: \"formItem.switch\"\n    }\n  }, [_c('span', {\n    slot: \"open\"\n  }, [_vm._v(\"开启\")]), _vm._v(\" \"), _c('span', {\n    slot: \"close\"\n  }, [_vm._v(\"关闭\")])])], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"滑块\"\n    }\n  }, [_c('Slider', {\n    attrs: {\n      \"range\": \"\"\n    },\n    model: {\n      value: (_vm.formItem.slider),\n      callback: function($$v) {\n        _vm.formItem.slider = $$v\n      },\n      expression: \"formItem.slider\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"文本域\"\n    }\n  }, [_c('Input', {\n    attrs: {\n      \"type\": \"textarea\",\n      \"autosize\": {\n        minRows: 2,\n        maxRows: 5\n      },\n      \"placeholder\": \"请输入...\"\n    },\n    model: {\n      value: (_vm.formItem.textarea),\n      callback: function($$v) {\n        _vm.formItem.textarea = $$v\n      },\n      expression: \"formItem.textarea\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', [_c('Button', {\n    attrs: {\n      \"type\": \"primary\"\n    }\n  }, [_vm._v(\"提交\")]), _vm._v(\" \"), _c('Button', {\n    staticStyle: {\n      \"margin-left\": \"8px\"\n    },\n    attrs: {\n      \"type\": \"ghost\"\n    }\n  }, [_vm._v(\"取消\")])], 1)], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"doc-content\"\n  }, [_c('h5', [_vm._v(\"表单控件\")]), _vm._v(\" \"), _c('p', [_vm._v(\"在 Form 内，每个表单域由 Form-item 组成，可包含的控件有：Input、Radio、Checkbox、Switch、Select、Slider、DatePicker、TimePicker、Cascader、Transfer、InputNumber、Rate、Upload。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"给 Form-item 设置属性 label 可以显示表单域的标签，需要给 Form 设置 label-width。 \")])])])], 1), _vm._v(\" \"), _c('Row', [_c('Col', {\n    attrs: {\n      \"span\": \"24\"\n    }\n  }, [_c('div', {\n    staticClass: \"doc-header\"\n  }, [_c('Form', {\n    attrs: {\n      \"model\": _vm.formLeft,\n      \"label-position\": \"left\",\n      \"label-width\": 100\n    }\n  }, [_c('Form-item', {\n    attrs: {\n      \"label\": \"标题\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: (_vm.formLeft.input1),\n      callback: function($$v) {\n        _vm.formLeft.input1 = $$v\n      },\n      expression: \"formLeft.input1\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"标题名称\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: (_vm.formLeft.input2),\n      callback: function($$v) {\n        _vm.formLeft.input2 = $$v\n      },\n      expression: \"formLeft.input2\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"标题名称对齐\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: (_vm.formLeft.input3),\n      callback: function($$v) {\n        _vm.formLeft.input3 = $$v\n      },\n      expression: \"formLeft.input3\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('Form', {\n    attrs: {\n      \"model\": _vm.formRight,\n      \"label-position\": \"right\",\n      \"label-width\": 100\n    }\n  }, [_c('Form-item', {\n    attrs: {\n      \"label\": \"标题\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: (_vm.formRight.input1),\n      callback: function($$v) {\n        _vm.formRight.input1 = $$v\n      },\n      expression: \"formRight.input1\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"标题名称\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: (_vm.formRight.input2),\n      callback: function($$v) {\n        _vm.formRight.input2 = $$v\n      },\n      expression: \"formRight.input2\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"标题名称对齐\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: (_vm.formRight.input3),\n      callback: function($$v) {\n        _vm.formRight.input3 = $$v\n      },\n      expression: \"formRight.input3\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('Form', {\n    attrs: {\n      \"model\": _vm.formTop,\n      \"label-position\": \"top\"\n    }\n  }, [_c('Form-item', {\n    attrs: {\n      \"label\": \"标题\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: (_vm.formTop.input1),\n      callback: function($$v) {\n        _vm.formTop.input1 = $$v\n      },\n      expression: \"formTop.input1\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"标题名称\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: (_vm.formTop.input2),\n      callback: function($$v) {\n        _vm.formTop.input2 = $$v\n      },\n      expression: \"formTop.input2\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"标题名称对齐\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: (_vm.formTop.input3),\n      callback: function($$v) {\n        _vm.formTop.input3 = $$v\n      },\n      expression: \"formTop.input3\"\n    }\n  })], 1)], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"doc-content\"\n  }, [_c('h5', [_vm._v(\"对齐方式\")]), _vm._v(\" \"), _c('p', [_vm._v(\"设置属性 label-position，可以改变表单域标签的位置，left 为左对齐，right 为右对齐，top 会置于表单域顶部\")])])])], 1), _vm._v(\" \"), _c('Row', [_c('Col', {\n    attrs: {\n      \"span\": \"24\"\n    }\n  }, [_c('div', {\n    staticClass: \"doc-header\"\n  }, [_c('Form', {\n    ref: \"formValidate\",\n    attrs: {\n      \"model\": _vm.formValidate,\n      \"rules\": _vm.ruleValidate,\n      \"label-width\": 80\n    }\n  }, [_c('Form-item', {\n    attrs: {\n      \"label\": \"姓名\",\n      \"prop\": \"name\"\n    }\n  }, [_c('Input', {\n    attrs: {\n      \"placeholder\": \"请输入姓名\"\n    },\n    model: {\n      value: (_vm.formValidate.name),\n      callback: function($$v) {\n        _vm.formValidate.name = $$v\n      },\n      expression: \"formValidate.name\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"邮箱\",\n      \"prop\": \"mail\"\n    }\n  }, [_c('Input', {\n    attrs: {\n      \"placeholder\": \"请输入邮箱\"\n    },\n    model: {\n      value: (_vm.formValidate.mail),\n      callback: function($$v) {\n        _vm.formValidate.mail = $$v\n      },\n      expression: \"formValidate.mail\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"城市\",\n      \"prop\": \"city\"\n    }\n  }, [_c('Select', {\n    attrs: {\n      \"placeholder\": \"请选择所在地\"\n    },\n    model: {\n      value: (_vm.formValidate.city),\n      callback: function($$v) {\n        _vm.formValidate.city = $$v\n      },\n      expression: \"formValidate.city\"\n    }\n  }, [_c('Option', {\n    attrs: {\n      \"value\": \"beijing\"\n    }\n  }, [_vm._v(\"北京市\")]), _vm._v(\" \"), _c('Option', {\n    attrs: {\n      \"value\": \"shanghai\"\n    }\n  }, [_vm._v(\"上海市\")]), _vm._v(\" \"), _c('Option', {\n    attrs: {\n      \"value\": \"shenzhen\"\n    }\n  }, [_vm._v(\"深圳市\")])], 1)], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"选择日期\"\n    }\n  }, [_c('Row', [_c('Col', {\n    attrs: {\n      \"span\": \"11\"\n    }\n  }, [_c('Form-item', {\n    attrs: {\n      \"prop\": \"date\"\n    }\n  }, [_c('Date-picker', {\n    attrs: {\n      \"type\": \"date\",\n      \"placeholder\": \"选择日期\"\n    },\n    model: {\n      value: (_vm.formValidate.date),\n      callback: function($$v) {\n        _vm.formValidate.date = $$v\n      },\n      expression: \"formValidate.date\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('Col', {\n    staticStyle: {\n      \"text-align\": \"center\"\n    },\n    attrs: {\n      \"span\": \"2\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"span\": \"11\"\n    }\n  }, [_c('Form-item', {\n    attrs: {\n      \"prop\": \"time\"\n    }\n  }, [_c('Time-picker', {\n    attrs: {\n      \"type\": \"time\",\n      \"placeholder\": \"选择时间\"\n    },\n    model: {\n      value: (_vm.formValidate.time),\n      callback: function($$v) {\n        _vm.formValidate.time = $$v\n      },\n      expression: \"formValidate.time\"\n    }\n  })], 1)], 1)], 1)], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"性别\",\n      \"prop\": \"gender\"\n    }\n  }, [_c('Radio-group', {\n    model: {\n      value: (_vm.formValidate.gender),\n      callback: function($$v) {\n        _vm.formValidate.gender = $$v\n      },\n      expression: \"formValidate.gender\"\n    }\n  }, [_c('Radio', {\n    attrs: {\n      \"label\": \"male\"\n    }\n  }, [_vm._v(\"男\")]), _vm._v(\" \"), _c('Radio', {\n    attrs: {\n      \"label\": \"female\"\n    }\n  }, [_vm._v(\"女\")])], 1)], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"爱好\",\n      \"prop\": \"interest\"\n    }\n  }, [_c('Checkbox-group', {\n    model: {\n      value: (_vm.formValidate.interest),\n      callback: function($$v) {\n        _vm.formValidate.interest = $$v\n      },\n      expression: \"formValidate.interest\"\n    }\n  }, [_c('Checkbox', {\n    attrs: {\n      \"label\": \"吃饭\"\n    }\n  }), _vm._v(\" \"), _c('Checkbox', {\n    attrs: {\n      \"label\": \"睡觉\"\n    }\n  }), _vm._v(\" \"), _c('Checkbox', {\n    attrs: {\n      \"label\": \"跑步\"\n    }\n  }), _vm._v(\" \"), _c('Checkbox', {\n    attrs: {\n      \"label\": \"看电影\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"介绍\",\n      \"prop\": \"desc\"\n    }\n  }, [_c('Input', {\n    attrs: {\n      \"type\": \"textarea\",\n      \"autosize\": {\n        minRows: 2,\n        maxRows: 5\n      },\n      \"placeholder\": \"请输入...\"\n    },\n    model: {\n      value: (_vm.formValidate.desc),\n      callback: function($$v) {\n        _vm.formValidate.desc = $$v\n      },\n      expression: \"formValidate.desc\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', [_c('Button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.handleSubmit('formValidate')\n      }\n    }\n  }, [_vm._v(\"提交\")]), _vm._v(\" \"), _c('Button', {\n    staticStyle: {\n      \"margin-left\": \"8px\"\n    },\n    attrs: {\n      \"type\": \"ghost\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.handleReset('formValidate')\n      }\n    }\n  }, [_vm._v(\"重置\")])], 1)], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"doc-content\"\n  }, [_c('h5', [_vm._v(\"表单验证\")]), _vm._v(\" \"), _c('p', [_vm._v(\"Form 组件基于  async-validator 实现的数据验证，给 Form 设置属性 rules，同时给需要验证的 Form-item 设置属性 prop 指向对应字段即可。\")])])])], 1), _vm._v(\" \"), _c('Row', [_c('Col', {\n    attrs: {\n      \"span\": \"24\"\n    }\n  }, [_c('div', {\n    staticClass: \"doc-header\"\n  }, [_c('Form', {\n    ref: \"formDynamic\",\n    attrs: {\n      \"model\": _vm.formDynamic,\n      \"label-width\": 80\n    }\n  }, [_vm._l((_vm.formDynamic.items), function(item, index) {\n    return _c('Form-item', {\n      key: index,\n      attrs: {\n        \"label\": '项目' + (index + 1),\n        \"prop\": 'items.' + index + '.value',\n        \"rules\": {\n          required: true,\n          message: '项目' + (index + 1) + '不能为空',\n          trigger: 'blur'\n        }\n      }\n    }, [_c('Input', {\n      attrs: {\n        \"type\": \"text\",\n        \"placeholder\": \"请输入...\"\n      },\n      model: {\n        value: (item.value),\n        callback: function($$v) {\n          item.value = $$v\n        },\n        expression: \"item.value\"\n      }\n    }), _vm._v(\" \"), _c('Button', {\n      attrs: {\n        \"type\": \"ghost\",\n        \"size\": \"small\"\n      },\n      on: {\n        \"click\": function($event) {\n          _vm.handleRemove(index)\n        }\n      }\n    }, [_vm._v(\"删除\")])], 1)\n  }), _vm._v(\" \"), _c('Form-item', [_c('Row', [_c('Button', {\n    attrs: {\n      \"type\": \"dashed\",\n      \"long\": \"\",\n      \"icon\": \"plus-round\"\n    },\n    on: {\n      \"click\": _vm.handleAdd\n    }\n  }, [_vm._v(\"新增\")])], 1)], 1), _vm._v(\" \"), _c('Form-item', [_c('Button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.handleSubmit('formDynamic')\n      }\n    }\n  }, [_vm._v(\"提交\")]), _vm._v(\" \"), _c('Button', {\n    staticStyle: {\n      \"margin-left\": \"8px\"\n    },\n    attrs: {\n      \"type\": \"ghost\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.handleReset('formDynamic')\n      }\n    }\n  }, [_vm._v(\"重置\")])], 1)], 2)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"doc-content\"\n  }, [_c('h5', [_vm._v(\"动态增减表单项\")]), _vm._v(\" \"), _c('p', [_vm._v(\"当需要动态维护 Form-item 时，也可以直接给 Form-item 设置属性 rules 来单独为该域做验证\")]), _vm._v(\" \"), _c('p', [_vm._v(\"动态设置 Form-item 的 prop 属性时，会依据上层的 Form 组件的 model 来获取，查看示例代码。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"Form-item 还可以独立设置 required、error 等属性，详见 API。\")])])])], 1)], 1)\n},staticRenderFns: []}\nmodule.exports.render._withStripped = true\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n     require(\"vue-loader/node_modules/vue-hot-reload-api\").rerender(\"data-v-6c0ec0ac\", module.exports)\n  }\n}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/35.854f995e8b0ecb8954dd.js","var disposed = false\nvar Component = require(\"!../../../node_modules/_vue-loader@12.2.1@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/_vue-loader@12.2.1@vue-loader/lib/selector?type=script&index=0!./Form.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/_vue-loader@12.2.1@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6c0ec0ac\\\"}!../../../node_modules/_vue-loader@12.2.1@vue-loader/lib/selector?type=template&index=0!./Form.vue\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\nComponent.options.__file = \"D:\\\\workspace-python\\\\platform-tools\\\\platform_vue\\\\src\\\\views\\\\components\\\\Form.vue\"\nif (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== \"default\" && key.substr(0, 2) !== \"__\"})) {console.error(\"named exports are not supported in *.vue files.\")}\nif (Component.options.functional) {console.error(\"[vue-loader] Form.vue: functional components are not supported with templates, they should use render functions.\")}\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-loader/node_modules/vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-6c0ec0ac\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-6c0ec0ac\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/components/Form.vue\n// module id = 590\n// module chunks = 35","<template>\r\n\r\n<div>\r\n    \r\n\r\n     <Row>\r\n        <Col span=\"24\" >\r\n           \r\n           <div style=\"\" class=\"doc-header\">\r\n                       <Form ref=\"formInline\" :model=\"formInline\" :rules=\"ruleInline\" inline>\r\n                    <Form-item prop=\"user\">\r\n                        <Input type=\"text\" v-model=\"formInline.user\" placeholder=\"Username\">\r\n                            <Icon type=\"ios-person-outline\" slot=\"prepend\"></Icon>\r\n                        </Input>\r\n                    </Form-item>\r\n                    <Form-item prop=\"password\">\r\n                        <Input type=\"password\" v-model=\"formInline.password\" placeholder=\"Password\">\r\n                            <Icon type=\"ios-locked-outline\" slot=\"prepend\"></Icon>\r\n                        </Input>\r\n                    </Form-item>\r\n                    <Form-item>\r\n                        <Button type=\"primary\" @click=\"handleSubmit('formInline')\">登录</Button>\r\n                    </Form-item>\r\n                </Form>\r\n\r\n            </div>\r\n            <div style=\"\" class=\"doc-content\">\r\n                <h5>行内表单</h5>\r\n        <p>设置属性 inline，表单元素可以水平排列。</p>\r\n\r\n            </div>\r\n        </Col>\r\n\r\n\r\n\r\n\r\n    </Row>\r\n\r\n\r\n\r\n\r\n  <Row>\r\n        <Col span=\"24\" >\r\n           \r\n           <div style=\"\" class=\"doc-header\">\r\n                      <Form :model=\"formItem\" :label-width=\"80\">\r\n        <Form-item label=\"输入框\">\r\n            <Input v-model=\"formItem.input\" placeholder=\"请输入\"></Input>\r\n        </Form-item>\r\n        <Form-item label=\"选择器\">\r\n            <Select v-model=\"formItem.select\" placeholder=\"请选择\">\r\n                <Option value=\"beijing\">北京市</Option>\r\n                <Option value=\"shanghai\">上海市</Option>\r\n                <Option value=\"shenzhen\">深圳市</Option>\r\n            </Select>\r\n        </Form-item>\r\n        <Form-item label=\"日期控件\">\r\n                    <Date-picker type=\"date\" placeholder=\"选择日期\" v-model=\"formItem.date\"></Date-picker>\r\n                    <Time-picker type=\"time\" placeholder=\"选择时间\" v-model=\"formItem.time\"></Time-picker>\r\n        </Form-item>\r\n        <Form-item label=\"单选框\">\r\n            <Radio-group v-model=\"formItem.radio\">\r\n                <Radio label=\"male\">男</Radio>\r\n                <Radio label=\"female\">女</Radio>\r\n            </Radio-group>\r\n        </Form-item>\r\n        <Form-item label=\"多选框\">\r\n            <Checkbox-group v-model=\"formItem.checkbox\">\r\n                <Checkbox label=\"吃饭\"></Checkbox>\r\n                <Checkbox label=\"睡觉\"></Checkbox>\r\n                <Checkbox label=\"跑步\"></Checkbox>\r\n                <Checkbox label=\"看电影\"></Checkbox>\r\n            </Checkbox-group>\r\n        </Form-item>\r\n        <Form-item label=\"开关\">\r\n            <iSwitch v-model=\"formItem.switch\" size=\"large\">\r\n                <span slot=\"open\">开启</span>\r\n                <span slot=\"close\">关闭</span>\r\n            </iSwitch>\r\n        </Form-item>\r\n        <Form-item label=\"滑块\">\r\n            <Slider v-model=\"formItem.slider\" range></Slider>\r\n        </Form-item>\r\n        <Form-item label=\"文本域\">\r\n            <Input v-model=\"formItem.textarea\" type=\"textarea\" :autosize=\"{minRows: 2,maxRows: 5}\" placeholder=\"请输入...\"></Input>\r\n        </Form-item>\r\n        <Form-item>\r\n            <Button type=\"primary\">提交</Button>\r\n            <Button type=\"ghost\" style=\"margin-left: 8px\">取消</Button>\r\n        </Form-item>\r\n    </Form>\r\n\r\n            </div>\r\n            <div style=\"\" class=\"doc-content\">\r\n                <h5>表单控件</h5>\r\n        <p>在 Form 内，每个表单域由 Form-item 组成，可包含的控件有：Input、Radio、Checkbox、Switch、Select、Slider、DatePicker、TimePicker、Cascader、Transfer、InputNumber、Rate、Upload。</p>\r\n<p>给 Form-item 设置属性 label 可以显示表单域的标签，需要给 Form 设置 label-width。 </p>\r\n            </div>\r\n        </Col>\r\n\r\n\r\n\r\n    </Row>\r\n\r\n\r\n\r\n\r\n    <Row>\r\n        <Col span=\"24\" >\r\n           \r\n           <div style=\"\" class=\"doc-header\">\r\n                       <Form :model=\"formLeft\" label-position=\"left\" :label-width=\"100\">\r\n        <Form-item label=\"标题\">\r\n            <Input v-model=\"formLeft.input1\"></Input>\r\n        </Form-item>\r\n        <Form-item label=\"标题名称\">\r\n            <Input v-model=\"formLeft.input2\"></Input>\r\n        </Form-item>\r\n        <Form-item label=\"标题名称对齐\">\r\n            <Input v-model=\"formLeft.input3\"></Input>\r\n        </Form-item>\r\n    </Form>\r\n    <Form :model=\"formRight\" label-position=\"right\" :label-width=\"100\">\r\n        <Form-item label=\"标题\">\r\n            <Input v-model=\"formRight.input1\"></Input>\r\n        </Form-item>\r\n        <Form-item label=\"标题名称\">\r\n            <Input v-model=\"formRight.input2\"></Input>\r\n        </Form-item>\r\n        <Form-item label=\"标题名称对齐\">\r\n            <Input v-model=\"formRight.input3\"></Input>\r\n        </Form-item>\r\n    </Form>\r\n    <Form :model=\"formTop\" label-position=\"top\">\r\n        <Form-item label=\"标题\">\r\n            <Input v-model=\"formTop.input1\"></Input>\r\n        </Form-item>\r\n        <Form-item label=\"标题名称\">\r\n            <Input v-model=\"formTop.input2\"></Input>\r\n        </Form-item>\r\n        <Form-item label=\"标题名称对齐\">\r\n            <Input v-model=\"formTop.input3\"></Input>\r\n        </Form-item>\r\n    </Form>\r\n\r\n            </div>\r\n            <div style=\"\" class=\"doc-content\">\r\n                <h5>对齐方式</h5>\r\n        <p>设置属性 label-position，可以改变表单域标签的位置，left 为左对齐，right 为右对齐，top 会置于表单域顶部</p>\r\n            </div>\r\n        </Col>\r\n\r\n    </Row>\r\n\r\n\r\n\r\n    <Row>\r\n        <Col span=\"24\" >\r\n           \r\n           <div style=\"\" class=\"doc-header\">\r\n                <Form ref=\"formValidate\" :model=\"formValidate\" :rules=\"ruleValidate\" :label-width=\"80\">\r\n        <Form-item label=\"姓名\" prop=\"name\">\r\n            <Input v-model=\"formValidate.name\" placeholder=\"请输入姓名\"></Input>\r\n        </Form-item>\r\n        <Form-item label=\"邮箱\" prop=\"mail\">\r\n            <Input v-model=\"formValidate.mail\" placeholder=\"请输入邮箱\"></Input>\r\n        </Form-item>\r\n        <Form-item label=\"城市\" prop=\"city\">\r\n            <Select v-model=\"formValidate.city\" placeholder=\"请选择所在地\">\r\n                <Option value=\"beijing\">北京市</Option>\r\n                <Option value=\"shanghai\">上海市</Option>\r\n                <Option value=\"shenzhen\">深圳市</Option>\r\n            </Select>\r\n        </Form-item>\r\n        <Form-item label=\"选择日期\">\r\n            <Row>\r\n                <Col span=\"11\">\r\n                    <Form-item prop=\"date\">\r\n                        <Date-picker type=\"date\" placeholder=\"选择日期\" v-model=\"formValidate.date\"></Date-picker>\r\n                    </Form-item>\r\n                </Col>\r\n                <Col span=\"2\" style=\"text-align: center\">-</Col>\r\n                <Col span=\"11\">\r\n                    <Form-item prop=\"time\">\r\n                        <Time-picker type=\"time\" placeholder=\"选择时间\" v-model=\"formValidate.time\"></Time-picker>\r\n                    </Form-item>\r\n                </Col>\r\n            </Row>\r\n        </Form-item>\r\n        <Form-item label=\"性别\" prop=\"gender\">\r\n            <Radio-group v-model=\"formValidate.gender\">\r\n                <Radio label=\"male\">男</Radio>\r\n                <Radio label=\"female\">女</Radio>\r\n            </Radio-group>\r\n        </Form-item>\r\n        <Form-item label=\"爱好\" prop=\"interest\">\r\n            <Checkbox-group v-model=\"formValidate.interest\">\r\n                <Checkbox label=\"吃饭\"></Checkbox>\r\n                <Checkbox label=\"睡觉\"></Checkbox>\r\n                <Checkbox label=\"跑步\"></Checkbox>\r\n                <Checkbox label=\"看电影\"></Checkbox>\r\n            </Checkbox-group>\r\n        </Form-item>\r\n        <Form-item label=\"介绍\" prop=\"desc\">\r\n            <Input v-model=\"formValidate.desc\" type=\"textarea\" :autosize=\"{minRows: 2,maxRows: 5}\" placeholder=\"请输入...\"></Input>\r\n        </Form-item>\r\n        <Form-item>\r\n            <Button type=\"primary\" @click=\"handleSubmit('formValidate')\">提交</Button>\r\n            <Button type=\"ghost\" @click=\"handleReset('formValidate')\" style=\"margin-left: 8px\">重置</Button>\r\n        </Form-item>\r\n    </Form>\r\n    \r\n\r\n            </div>\r\n            <div style=\"\" class=\"doc-content\">\r\n                <h5>表单验证</h5>\r\n        <p>Form 组件基于  async-validator 实现的数据验证，给 Form 设置属性 rules，同时给需要验证的 Form-item 设置属性 prop 指向对应字段即可。</p>\r\n            </div>\r\n        </Col>\r\n\r\n\r\n    </Row>\r\n\r\n\r\n\r\n    <Row>\r\n        <Col span=\"24\" >\r\n           \r\n           <div style=\"\" class=\"doc-header\">\r\n                 <Form ref=\"formDynamic\" :model=\"formDynamic\" :label-width=\"80\">\r\n        <Form-item\r\n            v-for=\"(item, index) in formDynamic.items\"\r\n            :key=\"index\"\r\n            :label=\"'项目' + (index + 1)\"\r\n            :prop=\"'items.' + index + '.value'\"\r\n            :rules=\"{required: true, message: '项目' + (index + 1) +'不能为空', trigger: 'blur'}\">\r\n\r\n                    <Input type=\"text\" v-model=\"item.value\" placeholder=\"请输入...\"></Input>\r\n                    <Button type=\"ghost\" @click=\"handleRemove(index)\" size='small'>删除</Button>\r\n        </Form-item>\r\n        <Form-item>\r\n            <Row>\r\n                    <Button type=\"dashed\" long @click=\"handleAdd\" icon=\"plus-round\">新增</Button>\r\n            </Row>\r\n        </Form-item>\r\n        <Form-item>\r\n            <Button type=\"primary\" @click=\"handleSubmit('formDynamic')\">提交</Button>\r\n            <Button type=\"ghost\" @click=\"handleReset('formDynamic')\" style=\"margin-left: 8px\">重置</Button>\r\n        </Form-item>\r\n    </Form>\r\n    \r\n\r\n            </div>\r\n            <div style=\"\" class=\"doc-content\">\r\n                <h5>动态增减表单项</h5>\r\n        <p>当需要动态维护 Form-item 时，也可以直接给 Form-item 设置属性 rules 来单独为该域做验证</p>\r\n        <p>动态设置 Form-item 的 prop 属性时，会依据上层的 Form 组件的 model 来获取，查看示例代码。</p>\r\n        <p>Form-item 还可以独立设置 required、error 等属性，详见 API。</p>\r\n\r\n            </div>\r\n        </Col>\r\n\r\n    </Row>\r\n  \r\n</div>\r\n\r\n</template>\r\n<script>\r\n    export default {\r\n        data () {\r\n            return {\r\n                formItem: {\r\n                    input: '',\r\n                    select: '',\r\n                    radio: 'male',\r\n                    checkbox: [],\r\n                    switch: true,\r\n                    date: '',\r\n                    time: '',\r\n                    slider: [20, 50],\r\n                    textarea: ''\r\n                },\r\n                 formInline: {\r\n                    user: '',\r\n                    password: ''\r\n                },\r\n                ruleInline: {\r\n                    user: [\r\n                        { required: true, message: '请填写用户名', trigger: 'blur' }\r\n                    ],\r\n                    password: [\r\n                        { required: true, message: '请填写密码', trigger: 'blur' },\r\n                        { type: 'string', min: 6, message: '密码长度不能小于6位', trigger: 'blur' }\r\n                    ]\r\n                },\r\n                 formLeft: {\r\n                    input1: '',\r\n                    input2: '',\r\n                    input3: ''\r\n                },\r\n                formRight: {\r\n                    input1: '',\r\n                    input2: '',\r\n                    input3: ''\r\n                },\r\n                formTop: {\r\n                    input1: '',\r\n                    input2: '',\r\n                    input3: ''\r\n                },\r\n                formValidate: {\r\n                    name: '',\r\n                    mail: '',\r\n                    city: '',\r\n                    gender: '',\r\n                    interest: [],\r\n                    date: '',\r\n                    time: '',\r\n                    desc: ''\r\n                },\r\n                ruleValidate: {\r\n                    name: [\r\n                        { required: true, message: '姓名不能为空', trigger: 'blur' }\r\n                    ],\r\n                    mail: [\r\n                        { required: true, message: '邮箱不能为空', trigger: 'blur' },\r\n                        { type: 'email', message: '邮箱格式不正确', trigger: 'blur' }\r\n                    ],\r\n                    city: [\r\n                        { required: true, message: '请选择城市', trigger: 'change' }\r\n                    ],\r\n                    gender: [\r\n                        { required: true, message: '请选择性别', trigger: 'change' }\r\n                    ],\r\n                    interest: [\r\n                        { required: true, type: 'array', min: 1, message: '至少选择一个爱好', trigger: 'change' },\r\n                        { type: 'array', max: 2, message: '最多选择两个爱好', trigger: 'change' }\r\n                    ],\r\n                    date: [\r\n                        { required: true, type: 'date', message: '请选择日期', trigger: 'change' }\r\n                    ],\r\n                    time: [\r\n                        { required: true, type: 'date', message: '请选择时间', trigger: 'change' }\r\n                    ],\r\n                    desc: [\r\n                        { required: true, message: '请输入个人介绍', trigger: 'blur' },\r\n                        { type: 'string', min: 20, message: '介绍不能少于20字', trigger: 'blur' }\r\n                    ]\r\n                },\r\n                formDynamic: {\r\n                    items: [\r\n                        {\r\n                            value: ''\r\n                        }\r\n                    ]\r\n                },\r\n            }   \r\n        },//data\r\n      methods: {\r\n            handleSubmit(name) {\r\n                this.$refs[name].validate((valid) => {\r\n                    if (valid) {\r\n                        this.$Message.success('提交成功!');\r\n                    } else {\r\n                        this.$Message.error('表单验证失败!');\r\n                    }\r\n                })\r\n            },\r\n             handleReset (name) {\r\n                this.$refs[name].resetFields();\r\n            },\r\n            handleAdd () {\r\n                this.formDynamic.items.push({\r\n                    value: ''\r\n                });\r\n            },\r\n            handleRemove (index) {\r\n                this.formDynamic.items.splice(index, 1);\r\n            },\r\n        }\r\n           \r\n    }\r\n</script>\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// Form.vue?7b08b696","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('Row', [_c('Col', {\n    attrs: {\n      \"span\": \"24\"\n    }\n  }, [_c('div', {\n    staticClass: \"doc-header\"\n  }, [_c('Form', {\n    ref: \"formInline\",\n    attrs: {\n      \"model\": _vm.formInline,\n      \"rules\": _vm.ruleInline,\n      \"inline\": \"\"\n    }\n  }, [_c('Form-item', {\n    attrs: {\n      \"prop\": \"user\"\n    }\n  }, [_c('Input', {\n    attrs: {\n      \"type\": \"text\",\n      \"placeholder\": \"Username\"\n    },\n    model: {\n      value: (_vm.formInline.user),\n      callback: function($$v) {\n        _vm.formInline.user = $$v\n      },\n      expression: \"formInline.user\"\n    }\n  }, [_c('Icon', {\n    attrs: {\n      \"type\": \"ios-person-outline\"\n    },\n    slot: \"prepend\"\n  })], 1)], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"prop\": \"password\"\n    }\n  }, [_c('Input', {\n    attrs: {\n      \"type\": \"password\",\n      \"placeholder\": \"Password\"\n    },\n    model: {\n      value: (_vm.formInline.password),\n      callback: function($$v) {\n        _vm.formInline.password = $$v\n      },\n      expression: \"formInline.password\"\n    }\n  }, [_c('Icon', {\n    attrs: {\n      \"type\": \"ios-locked-outline\"\n    },\n    slot: \"prepend\"\n  })], 1)], 1), _vm._v(\" \"), _c('Form-item', [_c('Button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.handleSubmit('formInline')\n      }\n    }\n  }, [_vm._v(\"登录\")])], 1)], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"doc-content\"\n  }, [_c('h5', [_vm._v(\"行内表单\")]), _vm._v(\" \"), _c('p', [_vm._v(\"设置属性 inline，表单元素可以水平排列。\")])])])], 1), _vm._v(\" \"), _c('Row', [_c('Col', {\n    attrs: {\n      \"span\": \"24\"\n    }\n  }, [_c('div', {\n    staticClass: \"doc-header\"\n  }, [_c('Form', {\n    attrs: {\n      \"model\": _vm.formItem,\n      \"label-width\": 80\n    }\n  }, [_c('Form-item', {\n    attrs: {\n      \"label\": \"输入框\"\n    }\n  }, [_c('Input', {\n    attrs: {\n      \"placeholder\": \"请输入\"\n    },\n    model: {\n      value: (_vm.formItem.input),\n      callback: function($$v) {\n        _vm.formItem.input = $$v\n      },\n      expression: \"formItem.input\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"选择器\"\n    }\n  }, [_c('Select', {\n    attrs: {\n      \"placeholder\": \"请选择\"\n    },\n    model: {\n      value: (_vm.formItem.select),\n      callback: function($$v) {\n        _vm.formItem.select = $$v\n      },\n      expression: \"formItem.select\"\n    }\n  }, [_c('Option', {\n    attrs: {\n      \"value\": \"beijing\"\n    }\n  }, [_vm._v(\"北京市\")]), _vm._v(\" \"), _c('Option', {\n    attrs: {\n      \"value\": \"shanghai\"\n    }\n  }, [_vm._v(\"上海市\")]), _vm._v(\" \"), _c('Option', {\n    attrs: {\n      \"value\": \"shenzhen\"\n    }\n  }, [_vm._v(\"深圳市\")])], 1)], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"日期控件\"\n    }\n  }, [_c('Date-picker', {\n    attrs: {\n      \"type\": \"date\",\n      \"placeholder\": \"选择日期\"\n    },\n    model: {\n      value: (_vm.formItem.date),\n      callback: function($$v) {\n        _vm.formItem.date = $$v\n      },\n      expression: \"formItem.date\"\n    }\n  }), _vm._v(\" \"), _c('Time-picker', {\n    attrs: {\n      \"type\": \"time\",\n      \"placeholder\": \"选择时间\"\n    },\n    model: {\n      value: (_vm.formItem.time),\n      callback: function($$v) {\n        _vm.formItem.time = $$v\n      },\n      expression: \"formItem.time\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"单选框\"\n    }\n  }, [_c('Radio-group', {\n    model: {\n      value: (_vm.formItem.radio),\n      callback: function($$v) {\n        _vm.formItem.radio = $$v\n      },\n      expression: \"formItem.radio\"\n    }\n  }, [_c('Radio', {\n    attrs: {\n      \"label\": \"male\"\n    }\n  }, [_vm._v(\"男\")]), _vm._v(\" \"), _c('Radio', {\n    attrs: {\n      \"label\": \"female\"\n    }\n  }, [_vm._v(\"女\")])], 1)], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"多选框\"\n    }\n  }, [_c('Checkbox-group', {\n    model: {\n      value: (_vm.formItem.checkbox),\n      callback: function($$v) {\n        _vm.formItem.checkbox = $$v\n      },\n      expression: \"formItem.checkbox\"\n    }\n  }, [_c('Checkbox', {\n    attrs: {\n      \"label\": \"吃饭\"\n    }\n  }), _vm._v(\" \"), _c('Checkbox', {\n    attrs: {\n      \"label\": \"睡觉\"\n    }\n  }), _vm._v(\" \"), _c('Checkbox', {\n    attrs: {\n      \"label\": \"跑步\"\n    }\n  }), _vm._v(\" \"), _c('Checkbox', {\n    attrs: {\n      \"label\": \"看电影\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"开关\"\n    }\n  }, [_c('iSwitch', {\n    attrs: {\n      \"size\": \"large\"\n    },\n    model: {\n      value: (_vm.formItem.switch),\n      callback: function($$v) {\n        _vm.formItem.switch = $$v\n      },\n      expression: \"formItem.switch\"\n    }\n  }, [_c('span', {\n    slot: \"open\"\n  }, [_vm._v(\"开启\")]), _vm._v(\" \"), _c('span', {\n    slot: \"close\"\n  }, [_vm._v(\"关闭\")])])], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"滑块\"\n    }\n  }, [_c('Slider', {\n    attrs: {\n      \"range\": \"\"\n    },\n    model: {\n      value: (_vm.formItem.slider),\n      callback: function($$v) {\n        _vm.formItem.slider = $$v\n      },\n      expression: \"formItem.slider\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"文本域\"\n    }\n  }, [_c('Input', {\n    attrs: {\n      \"type\": \"textarea\",\n      \"autosize\": {\n        minRows: 2,\n        maxRows: 5\n      },\n      \"placeholder\": \"请输入...\"\n    },\n    model: {\n      value: (_vm.formItem.textarea),\n      callback: function($$v) {\n        _vm.formItem.textarea = $$v\n      },\n      expression: \"formItem.textarea\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', [_c('Button', {\n    attrs: {\n      \"type\": \"primary\"\n    }\n  }, [_vm._v(\"提交\")]), _vm._v(\" \"), _c('Button', {\n    staticStyle: {\n      \"margin-left\": \"8px\"\n    },\n    attrs: {\n      \"type\": \"ghost\"\n    }\n  }, [_vm._v(\"取消\")])], 1)], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"doc-content\"\n  }, [_c('h5', [_vm._v(\"表单控件\")]), _vm._v(\" \"), _c('p', [_vm._v(\"在 Form 内，每个表单域由 Form-item 组成，可包含的控件有：Input、Radio、Checkbox、Switch、Select、Slider、DatePicker、TimePicker、Cascader、Transfer、InputNumber、Rate、Upload。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"给 Form-item 设置属性 label 可以显示表单域的标签，需要给 Form 设置 label-width。 \")])])])], 1), _vm._v(\" \"), _c('Row', [_c('Col', {\n    attrs: {\n      \"span\": \"24\"\n    }\n  }, [_c('div', {\n    staticClass: \"doc-header\"\n  }, [_c('Form', {\n    attrs: {\n      \"model\": _vm.formLeft,\n      \"label-position\": \"left\",\n      \"label-width\": 100\n    }\n  }, [_c('Form-item', {\n    attrs: {\n      \"label\": \"标题\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: (_vm.formLeft.input1),\n      callback: function($$v) {\n        _vm.formLeft.input1 = $$v\n      },\n      expression: \"formLeft.input1\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"标题名称\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: (_vm.formLeft.input2),\n      callback: function($$v) {\n        _vm.formLeft.input2 = $$v\n      },\n      expression: \"formLeft.input2\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"标题名称对齐\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: (_vm.formLeft.input3),\n      callback: function($$v) {\n        _vm.formLeft.input3 = $$v\n      },\n      expression: \"formLeft.input3\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('Form', {\n    attrs: {\n      \"model\": _vm.formRight,\n      \"label-position\": \"right\",\n      \"label-width\": 100\n    }\n  }, [_c('Form-item', {\n    attrs: {\n      \"label\": \"标题\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: (_vm.formRight.input1),\n      callback: function($$v) {\n        _vm.formRight.input1 = $$v\n      },\n      expression: \"formRight.input1\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"标题名称\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: (_vm.formRight.input2),\n      callback: function($$v) {\n        _vm.formRight.input2 = $$v\n      },\n      expression: \"formRight.input2\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"标题名称对齐\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: (_vm.formRight.input3),\n      callback: function($$v) {\n        _vm.formRight.input3 = $$v\n      },\n      expression: \"formRight.input3\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('Form', {\n    attrs: {\n      \"model\": _vm.formTop,\n      \"label-position\": \"top\"\n    }\n  }, [_c('Form-item', {\n    attrs: {\n      \"label\": \"标题\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: (_vm.formTop.input1),\n      callback: function($$v) {\n        _vm.formTop.input1 = $$v\n      },\n      expression: \"formTop.input1\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"标题名称\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: (_vm.formTop.input2),\n      callback: function($$v) {\n        _vm.formTop.input2 = $$v\n      },\n      expression: \"formTop.input2\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"标题名称对齐\"\n    }\n  }, [_c('Input', {\n    model: {\n      value: (_vm.formTop.input3),\n      callback: function($$v) {\n        _vm.formTop.input3 = $$v\n      },\n      expression: \"formTop.input3\"\n    }\n  })], 1)], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"doc-content\"\n  }, [_c('h5', [_vm._v(\"对齐方式\")]), _vm._v(\" \"), _c('p', [_vm._v(\"设置属性 label-position，可以改变表单域标签的位置，left 为左对齐，right 为右对齐，top 会置于表单域顶部\")])])])], 1), _vm._v(\" \"), _c('Row', [_c('Col', {\n    attrs: {\n      \"span\": \"24\"\n    }\n  }, [_c('div', {\n    staticClass: \"doc-header\"\n  }, [_c('Form', {\n    ref: \"formValidate\",\n    attrs: {\n      \"model\": _vm.formValidate,\n      \"rules\": _vm.ruleValidate,\n      \"label-width\": 80\n    }\n  }, [_c('Form-item', {\n    attrs: {\n      \"label\": \"姓名\",\n      \"prop\": \"name\"\n    }\n  }, [_c('Input', {\n    attrs: {\n      \"placeholder\": \"请输入姓名\"\n    },\n    model: {\n      value: (_vm.formValidate.name),\n      callback: function($$v) {\n        _vm.formValidate.name = $$v\n      },\n      expression: \"formValidate.name\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"邮箱\",\n      \"prop\": \"mail\"\n    }\n  }, [_c('Input', {\n    attrs: {\n      \"placeholder\": \"请输入邮箱\"\n    },\n    model: {\n      value: (_vm.formValidate.mail),\n      callback: function($$v) {\n        _vm.formValidate.mail = $$v\n      },\n      expression: \"formValidate.mail\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"城市\",\n      \"prop\": \"city\"\n    }\n  }, [_c('Select', {\n    attrs: {\n      \"placeholder\": \"请选择所在地\"\n    },\n    model: {\n      value: (_vm.formValidate.city),\n      callback: function($$v) {\n        _vm.formValidate.city = $$v\n      },\n      expression: \"formValidate.city\"\n    }\n  }, [_c('Option', {\n    attrs: {\n      \"value\": \"beijing\"\n    }\n  }, [_vm._v(\"北京市\")]), _vm._v(\" \"), _c('Option', {\n    attrs: {\n      \"value\": \"shanghai\"\n    }\n  }, [_vm._v(\"上海市\")]), _vm._v(\" \"), _c('Option', {\n    attrs: {\n      \"value\": \"shenzhen\"\n    }\n  }, [_vm._v(\"深圳市\")])], 1)], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"选择日期\"\n    }\n  }, [_c('Row', [_c('Col', {\n    attrs: {\n      \"span\": \"11\"\n    }\n  }, [_c('Form-item', {\n    attrs: {\n      \"prop\": \"date\"\n    }\n  }, [_c('Date-picker', {\n    attrs: {\n      \"type\": \"date\",\n      \"placeholder\": \"选择日期\"\n    },\n    model: {\n      value: (_vm.formValidate.date),\n      callback: function($$v) {\n        _vm.formValidate.date = $$v\n      },\n      expression: \"formValidate.date\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('Col', {\n    staticStyle: {\n      \"text-align\": \"center\"\n    },\n    attrs: {\n      \"span\": \"2\"\n    }\n  }, [_vm._v(\"-\")]), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"span\": \"11\"\n    }\n  }, [_c('Form-item', {\n    attrs: {\n      \"prop\": \"time\"\n    }\n  }, [_c('Time-picker', {\n    attrs: {\n      \"type\": \"time\",\n      \"placeholder\": \"选择时间\"\n    },\n    model: {\n      value: (_vm.formValidate.time),\n      callback: function($$v) {\n        _vm.formValidate.time = $$v\n      },\n      expression: \"formValidate.time\"\n    }\n  })], 1)], 1)], 1)], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"性别\",\n      \"prop\": \"gender\"\n    }\n  }, [_c('Radio-group', {\n    model: {\n      value: (_vm.formValidate.gender),\n      callback: function($$v) {\n        _vm.formValidate.gender = $$v\n      },\n      expression: \"formValidate.gender\"\n    }\n  }, [_c('Radio', {\n    attrs: {\n      \"label\": \"male\"\n    }\n  }, [_vm._v(\"男\")]), _vm._v(\" \"), _c('Radio', {\n    attrs: {\n      \"label\": \"female\"\n    }\n  }, [_vm._v(\"女\")])], 1)], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"爱好\",\n      \"prop\": \"interest\"\n    }\n  }, [_c('Checkbox-group', {\n    model: {\n      value: (_vm.formValidate.interest),\n      callback: function($$v) {\n        _vm.formValidate.interest = $$v\n      },\n      expression: \"formValidate.interest\"\n    }\n  }, [_c('Checkbox', {\n    attrs: {\n      \"label\": \"吃饭\"\n    }\n  }), _vm._v(\" \"), _c('Checkbox', {\n    attrs: {\n      \"label\": \"睡觉\"\n    }\n  }), _vm._v(\" \"), _c('Checkbox', {\n    attrs: {\n      \"label\": \"跑步\"\n    }\n  }), _vm._v(\" \"), _c('Checkbox', {\n    attrs: {\n      \"label\": \"看电影\"\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('Form-item', {\n    attrs: {\n      \"label\": \"介绍\",\n      \"prop\": \"desc\"\n    }\n  }, [_c('Input', {\n    attrs: {\n      \"type\": \"textarea\",\n      \"autosize\": {\n        minRows: 2,\n        maxRows: 5\n      },\n      \"placeholder\": \"请输入...\"\n    },\n    model: {\n      value: (_vm.formValidate.desc),\n      callback: function($$v) {\n        _vm.formValidate.desc = $$v\n      },\n      expression: \"formValidate.desc\"\n    }\n  })], 1), _vm._v(\" \"), _c('Form-item', [_c('Button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.handleSubmit('formValidate')\n      }\n    }\n  }, [_vm._v(\"提交\")]), _vm._v(\" \"), _c('Button', {\n    staticStyle: {\n      \"margin-left\": \"8px\"\n    },\n    attrs: {\n      \"type\": \"ghost\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.handleReset('formValidate')\n      }\n    }\n  }, [_vm._v(\"重置\")])], 1)], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"doc-content\"\n  }, [_c('h5', [_vm._v(\"表单验证\")]), _vm._v(\" \"), _c('p', [_vm._v(\"Form 组件基于  async-validator 实现的数据验证，给 Form 设置属性 rules，同时给需要验证的 Form-item 设置属性 prop 指向对应字段即可。\")])])])], 1), _vm._v(\" \"), _c('Row', [_c('Col', {\n    attrs: {\n      \"span\": \"24\"\n    }\n  }, [_c('div', {\n    staticClass: \"doc-header\"\n  }, [_c('Form', {\n    ref: \"formDynamic\",\n    attrs: {\n      \"model\": _vm.formDynamic,\n      \"label-width\": 80\n    }\n  }, [_vm._l((_vm.formDynamic.items), function(item, index) {\n    return _c('Form-item', {\n      key: index,\n      attrs: {\n        \"label\": '项目' + (index + 1),\n        \"prop\": 'items.' + index + '.value',\n        \"rules\": {\n          required: true,\n          message: '项目' + (index + 1) + '不能为空',\n          trigger: 'blur'\n        }\n      }\n    }, [_c('Input', {\n      attrs: {\n        \"type\": \"text\",\n        \"placeholder\": \"请输入...\"\n      },\n      model: {\n        value: (item.value),\n        callback: function($$v) {\n          item.value = $$v\n        },\n        expression: \"item.value\"\n      }\n    }), _vm._v(\" \"), _c('Button', {\n      attrs: {\n        \"type\": \"ghost\",\n        \"size\": \"small\"\n      },\n      on: {\n        \"click\": function($event) {\n          _vm.handleRemove(index)\n        }\n      }\n    }, [_vm._v(\"删除\")])], 1)\n  }), _vm._v(\" \"), _c('Form-item', [_c('Row', [_c('Button', {\n    attrs: {\n      \"type\": \"dashed\",\n      \"long\": \"\",\n      \"icon\": \"plus-round\"\n    },\n    on: {\n      \"click\": _vm.handleAdd\n    }\n  }, [_vm._v(\"新增\")])], 1)], 1), _vm._v(\" \"), _c('Form-item', [_c('Button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.handleSubmit('formDynamic')\n      }\n    }\n  }, [_vm._v(\"提交\")]), _vm._v(\" \"), _c('Button', {\n    staticStyle: {\n      \"margin-left\": \"8px\"\n    },\n    attrs: {\n      \"type\": \"ghost\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.handleReset('formDynamic')\n      }\n    }\n  }, [_vm._v(\"重置\")])], 1)], 2)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"doc-content\"\n  }, [_c('h5', [_vm._v(\"动态增减表单项\")]), _vm._v(\" \"), _c('p', [_vm._v(\"当需要动态维护 Form-item 时，也可以直接给 Form-item 设置属性 rules 来单独为该域做验证\")]), _vm._v(\" \"), _c('p', [_vm._v(\"动态设置 Form-item 的 prop 属性时，会依据上层的 Form 组件的 model 来获取，查看示例代码。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"Form-item 还可以独立设置 required、error 等属性，详见 API。\")])])])], 1)], 1)\n},staticRenderFns: []}\nmodule.exports.render._withStripped = true\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n     require(\"vue-loader/node_modules/vue-hot-reload-api\").rerender(\"data-v-6c0ec0ac\", module.exports)\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@12.2.1@vue-loader/lib/template-compiler?{\"id\":\"data-v-6c0ec0ac\"}!./~/_vue-loader@12.2.1@vue-loader/lib/selector.js?type=template&index=0!./src/views/components/Form.vue\n// module id = 739\n// module chunks = 35"],"sourceRoot":""}